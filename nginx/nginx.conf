user nginx;

worker_processes    auto;

events { worker_connections 1024; }

http { # конфиги на уровне http сервера
# Формат логов
    log_format upstream_time '$remote_addr $http_x_forwarded_for - $remote_user [$time_local] '
                             '$ssl_protocol "$request" $status $body_bytes_sent '
                             '"$http_referer" "$http_user_agent"'
                             'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time"';
# Файл логов 
    access_log /var/log/nginx/access.log upstream_time;

# Подключение зависимостей
    include         /etc/nginx/proxy.conf;
    include         /etc/nginx/mime.types;
    limit_req_zone  $binary_remote_addr zone=one:10m rate=5r/s;
# Разрешает или запрещает выдавать версию nginx’а на страницах ошибок и в поле “Server” заголовка ответа 
# https://nginx.org/ru/docs/http/ngx_http_core_module.html#server_tokens
    server_tokens   off;

    sendfile on; 
# Ограничивает максимальное время, в течение которого могут обрабатываться запросы в рамках keep-alive соединения.
# По достижении заданного времени соединение закрывается после обработки очередного запроса.
    keepalive_timeout   29s;

# Задаёт таймаут при чтении тела запроса клиента
    client_body_timeout 10; 
# Задаёт таймаут при чтении заголовка запроса клиента
    client_header_timeout 10; 
# Задаёт таймаут при передаче ответа клиенту
    send_timeout 10; 

# Описание группы серверов, которые могут использоваться в директивах proxy_pass, fastcgi_pass, uwsgi_pass, scgi_pass, memcached_pass и grpc_pass
    upstream webapi {
        server api:5000;
    }

    server {
        listen     *:80 default_server;
        add_header Strict-Transport-Security max-age=15768000;
        return     301 https://$host$request_uri;
    }

    server {
        listen                      443 ssl;
        server_name                 $hostname;
        
        # Настройки Ssl, где искать сертификаты, какие протоколы используются и другие приколы
        ssl_certificate             /etc/ssl/certs/localhost.crt;
        ssl_certificate_key         /etc/ssl/certs/localhost.key;
        ssl_protocols               TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers   on;
        ssl_ciphers                 "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_ecdh_curve              secp384r1;
        ssl_session_cache           shared:SSL:10m;
        ssl_session_tickets         off;
        ssl_stapling                on; 
        ssl_stapling_verify         on; 

        add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload" always;
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options "SAMEORIGIN";

        location / {
            proxy_pass http://webapi;
            limit_req  zone=one burst=10 nodelay;
        }
    }
}