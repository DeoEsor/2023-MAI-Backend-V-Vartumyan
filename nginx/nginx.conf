user nginx;

worker_processes    auto;

events { 
    worker_connections 1024; 
}

http { # конфиги на уровне http сервера
# Формат логов
    log_format upstream_time '$remote_addr $http_x_forwarded_for - $remote_user [$time_local] '
                             '$ssl_protocol "$request" $status $body_bytes_sent '
                             '"$http_referer" "$http_user_agent"'
                             'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time"';
# Файл логов 
    access_log /var/log/nginx/access.log upstream_time;

# Подключение зависимостей
    #include         /etc/nginx/proxy.conf;
    include         /etc/nginx/mime.types;

# Разрешает или запрещает выдавать версию nginx’а на страницах ошибок и в поле “Server” заголовка ответа 
# https://nginx.org/ru/docs/http/ngx_http_core_module.html#server_tokens
    server_tokens   off;

    sendfile on; 
# Ограничивает максимальное время, в течение которого могут обрабатываться запросы в рамках keep-alive соединения.
# По достижении заданного времени соединение закрывается после обработки очередного запроса.
    keepalive_timeout   29s;

# Задаёт таймаут при чтении тела запроса клиента
    client_body_timeout 10; 
# Задаёт таймаут при чтении заголовка запроса клиента
    client_header_timeout 10; 
# Задаёт таймаут при передаче ответа клиенту
    send_timeout 10; 

# Описание группы серверов, которые могут использоваться в директивах proxy_pass, fastcgi_pass, uwsgi_pass, scgi_pass, memcached_pass и grpc_pass
# LB часть обьяснялка https://habr.com/ru/companies/first/articles/683870/
    upstream indentity {
        least_conn; # крч т.к. по дефолту юзается раунд робин для балансировки и это не всегда круто ибо разные запросы обрабатываются n времени можно протыкать такую штуку и он будет выбирать тот сервак к которому привязано меньшее кол-во соединений
        server identity_service:8001;
    }
     
    upstream catalog {
        least_conn;
        server catalog_service:8002;
    }

    upstream ordering {
        least_conn;
        server ordering_service:8003;
    }

    server { # редирект на https
        listen      *:80;
        server_name mai-backend.com;
        add_header  Strict-Transport-Security max-age=15768000;
        # раскоментить строку ниже и перенести все после нее в блок https реквестов
        # return     301 https://$host$request_uri;
        location / { # статика
            root /var/www/app/;
            autoindex off;
        }
        
        location /indentity {
            proxy_pass http://indentity;
            limit_req  zone=one burst=10 nodelay;
        }
        
        location /catalog {
            proxy_pass http://catalog;
            limit_req  zone=one burst=10 nodelay;
        } 
        
        location /ordering {
            proxy_pass http://ordering;
            limit_req  zone=one burst=10 nodelay;
        }
        
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
    }

#    server { раскоментить если хочется поднять на домене с ssl
#        listen                      443 ssl http2;
#        server_name                 mai-backend.com;
#        
#        # Настройки Ssl, где искать сертификаты, какие протоколы используются и другие приколы
#        ssl_certificate             /etc/letsencrypt/live/example.org/fullchain.pem;
#        ssl_certificate_key         /etc/letsencrypt/live/example.org/privkey.pem;
#        include                     /etc/letsencrypt/options-ssl-nginx.conf;
#        
#        # пытался понять че за зверь вроде обьяснили тут https://linuxdata.ru/questions/q146.html
#        # из дедукции вроде параметры для протокола Диффри Хеллмана
#        ssl_dhparam                 /etc/letsencrypt/ssl-dhparams.pem; 
#        
#        
#        ssl_protocols               TLSv1.1 TLSv1.2;
#        ssl_prefer_server_ciphers   on;
#        ssl_ciphers                 "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
#        ssl_ecdh_curve              secp384r1;
#        ssl_session_cache           shared:SSL:10m;
#        ssl_session_tickets         off;
#        ssl_stapling                on; 
#        ssl_stapling_verify         on; 
#
#        add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload" always;
#        add_header X-Frame-Options DENY;
#        add_header X-Content-Type-Options nosniff;
#        add_header X-Frame-Options "SAMEORIGIN";
#
#        # region locations
#        
#        
#    }
}